{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authService.user$.pipe(map(user => {\n      if ((user === null || user === void 0 ? void 0 : user.role) === 'admin') {\n        console.log(\"USER ROL \", user.role);\n        return true;\n      } else {\n        this.router.navigate(['/home']);\n        return false;\n      }\n    }));\n  }\n}\nAdminGuard.ɵfac = function AdminGuard_Factory(t) {\n  return new (t || AdminGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAdminGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdminGuard,\n  factory: AdminGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAKA,SAASA,GAAG,QAAQ,gBAAgB;;;;AAKpC,OAAM,MAAOC,UAAU;EAErBC,YACUC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;EACb;EACHC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,OAAO,IAAI,CAACJ,WAAW,CAACK,KAAK,CAC5BC,IAAI,CACHT,GAAG,CAACU,IAAI,IAAE;MACR,IAAG,KAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,IAAI,MAAG,OAAO,EAAC;QACtBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACH,IAAI,CAACC,IAAI,CAAC;QAClC,OAAO,IAAI;OACZ,MAAI;QACH,IAAI,CAACP,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/B,OAAO,KAAK;;IAEhB,CAAC,CAAC,CACH;EACH;;;mBArBSb,UAAU;AAAA;;SAAVA,UAAU;EAAAc,SAAVd,UAAU;EAAAe,YAFT;AAAM","names":["map","AdminGuard","constructor","authService","router","canActivate","route","state","user$","pipe","user","role","console","log","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Cristian\\Documents\\Angular-router-17-step\\src\\app\\guards\\admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './../services/auth.service';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n      return this.authService.user$\n      .pipe(\n        map(user=>{\n          if(user?.role==='admin'){\n            console.log(\"USER ROL \",user.role);\n            return true;\n          }else{\n            this.router.navigate(['/home']);\n            return false;\n          }\n        })\n      )\n    }\n  \n  }\n  \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}