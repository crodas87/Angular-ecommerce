{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ExitGuard {\n  canDeactivate(component, currentRoute, currentState, nextState) {\n    return component.onExit ? component.onExit() : true;\n  }\n}\nExitGuard.ɵfac = function ExitGuard_Factory(t) {\n  return new (t || ExitGuard)();\n};\nExitGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ExitGuard,\n  factory: ExitGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAWA,OAAM,MAAOA,SAAS;EACpBC,aAAa,CACXC,SAAiB,EACjBC,YAAoC,EACpCC,YAAiC,EACjCC,SAA+B;IAC/B,OAAOH,SAAS,CAACI,MAAM,GAACJ,SAAS,CAACI,MAAM,EAAE,GAAG,IAAI;EACnD;;;mBAPWN,SAAS;AAAA;;SAATA,SAAS;EAAAO,SAATP,SAAS;EAAAQ,YAFR;AAAM","names":["ExitGuard","canDeactivate","component","currentRoute","currentState","nextState","onExit","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Cristian\\Documents\\Angular-router-17-step\\src\\app\\guards\\exit.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface OnExit{\n  onExit:()=> Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExitGuard implements CanDeactivate<unknown> {\n  canDeactivate(\n    component: OnExit,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return component.onExit?component.onExit() : true;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}