{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport { tap, map } from 'rxjs/operators';\nimport { environment } from './../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FilesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.API_URL}/api/files`;\n  }\n  getFile(name, url, type) {\n    return this.http.get(url, {\n      responseType: 'blob'\n    }).pipe(tap(content => {\n      const blob = new Blob([content], {\n        type\n      });\n      saveAs(blob, name);\n    }), map(() => true));\n  }\n  uploadFile(file) {\n    const dto = new FormData();\n    dto.append('file', file);\n    return this.http.post(`${this.apiUrl}/upload`, dto);\n  }\n}\nFilesService.ɵfac = function FilesService_Factory(t) {\n  return new (t || FilesService)(i0.ɵɵinject(i1.HttpClient));\n};\nFilesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FilesService,\n  factory: FilesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAQ,YAAY;AACnC,SAASC,GAAG,EAAEC,GAAG,QAAQ,gBAAgB;AAEzC,SAASC,WAAW,QAAQ,kCAAkC;;;AAM9D,OAAM,MAAOC,YAAY;EAIvBC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHN,WAAM,GAAG,GAAGH,WAAW,CAACI,OAAO,YAAY;EAI/C;EAEJC,OAAO,CAACC,IAAY,EAAEC,GAAW,EAAEC,IAAY;IAC7C,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAACF,GAAG,EAAE;MAACG,YAAY,EAAE;IAAM,CAAC,CAAC,CAChDC,IAAI,CACHb,GAAG,CAACc,OAAO,IAAG;MACZ,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,OAAO,CAAC,EAAE;QAACJ;MAAI,CAAC,CAAC;MACxCX,MAAM,CAACgB,IAAI,EAAEP,IAAI,CAAC;IACpB,CAAC,CAAC,EACFP,GAAG,CAAC,MAAM,IAAI,CAAC,CAChB;EACH;EAEAgB,UAAU,CAACC,IAAU;IACnB,MAAMC,GAAG,GAAG,IAAIC,QAAQ,EAAE;IAC1BD,GAAG,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IACxB,OAAO,IAAI,CAACb,IAAI,CAACiB,IAAI,CAAU,GAAG,IAAI,CAACC,MAAM,SAAS,EAAEJ,GAAG,CAAC;EAC9D;;;mBAvBWhB,YAAY;AAAA;;SAAZA,YAAY;EAAAqB,SAAZrB,YAAY;EAAAsB,YAFX;AAAM","names":["saveAs","tap","map","environment","FilesService","constructor","http","API_URL","getFile","name","url","type","get","responseType","pipe","content","blob","Blob","uploadFile","file","dto","FormData","append","post","apiUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Cristian\\Documents\\Angular-router-17-step\\src\\app\\services\\files.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport { tap, map } from 'rxjs/operators';\n\nimport { environment } from './../../environments/environment';\nimport { FileRta } from './../models/files.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n\n  private apiUrl = `${environment.API_URL}/api/files`;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getFile(name: string, url: string, type: string) {\n    return this.http.get(url, {responseType: 'blob'})\n    .pipe(\n      tap(content => {\n        const blob = new Blob([content], {type});\n        saveAs(blob, name);\n      }),\n      map(() => true)\n    );\n  }\n\n  uploadFile(file: Blob) {\n    const dto = new FormData();\n    dto.append('file', file);\n    return this.http.post<FileRta>(`${this.apiUrl}/upload`, dto)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}